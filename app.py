import streamlit as st
import requests
from bs4 import BeautifulSoup
import re
from datetime import datetime
import pandas as pd

st.set_page_config(page_title="SBI ‡∞Æ‡±ç‡∞Ø‡±Ç‡∞ö‡±Å‡∞µ‡∞≤‡±ç ‡∞´‡∞Ç‡∞°‡±ç ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞ü‡±ç‡∞∞‡∞æ‡∞ï‡∞∞‡±ç", layout="wide")

# --- Enhanced Scraper Functions ---
def get_nav_from_moneycontrol(url, fund_name):
    """Scrape NAV data from Moneycontrol"""
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    }
    
    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")
        
        # Look for NAV value in various possible locations
        nav_selectors = [
            'span.amt',
            '.nav_val',
            '[data-nav-value]',
            '.net-asset-value',
            'span:contains("‚Çπ")',
            '.price'
        ]
        
        nav_value = None
        
        # Try different selectors
        for selector in nav_selectors:
            elements = soup.select(selector)
            for element in elements:
                text = element.get_text().strip()
                # Look for currency patterns
                if re.search(r'‚Çπ?\s*\d+\.?\d*', text):
                    nav_match = re.search(r'‚Çπ?\s*(\d+\.?\d*)', text)
                    if nav_match:
                        nav_value = float(nav_match.group(1))
                        break
            if nav_value:
                break
        
        # Fallback: look for any element containing rupee symbol
        if not nav_value:
            all_text = soup.get_text()
            nav_matches = re.findall(r'‚Çπ\s*(\d+\.?\d*)', all_text)
            if nav_matches:
                nav_value = float(nav_matches[0])
        
        return nav_value if nav_value else None
        
    except Exception as e:
        return None

def get_nav_from_google(query):
    """Fallback scraper using Google search"""
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
    }
    url = f"https://www.google.com/search?q={query.replace(' ', '+')}"
    
    try:
        response = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(response.text, "html.parser")

        # Look for currency values in spans
        spans = soup.find_all("span")
        for span in spans:
            text = span.get_text()
            if "‚Çπ" in text and re.search(r'\d+\.?\d*', text):
                nav_match = re.search(r'‚Çπ?\s*(\d+\.?\d*)', text)
                if nav_match:
                    return float(nav_match.group(1))
        
        return None
    except Exception as e:
        return None

def format_indian_currency(amount):
    """Format currency in Indian style with commas"""
    if amount == 0:
        return "‚Çπ0"
    return f"‚Çπ{amount:,.2f}"

# --- Portfolio Data ---
portfolio = {
    "SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)": {
        "units": 1999.972,
        "url": "https://www.moneycontrol.com/mutual-funds/nav/sbi-long-term-equity-fund-regular-plan-growth/MSB093",
        "google_query": "SBI Long Term Equity Fund Regular Growth NAV",
        "english_name": "SBI Long Term Equity Fund (ELSS)"
    },
    "SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç": {
        "units": 10108.827,
        "url": "https://www.moneycontrol.com/mutual-funds/nav/sbi-multi-asset-allocation-fund-regular-plan-growth/MSB075",
        "google_query": "SBI Multi Asset Allocation Fund Regular Growth NAV",
        "english_name": "SBI Multi Asset Allocation Fund"
    }
}

# --- Header with Refresh Button ---
col1, col2 = st.columns([4, 1])
with col1:
    st.title("üìä SBI ‡∞Æ‡±ç‡∞Ø‡±Ç‡∞ö‡±Å‡∞µ‡∞≤‡±ç ‡∞´‡∞Ç‡∞°‡±ç ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞ü‡±ç‡∞∞‡∞æ‡∞ï‡∞∞‡±ç")
    st.markdown("‡∞≤‡±à‡∞µ‡±ç NAV ‡∞°‡±á‡∞ü‡∞æ‡∞§‡±ã ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç ‡∞≤‡±Ü‡∞ï‡±ç‡∞ï‡∞≤‡±Å")

with col2:
    st.markdown("<br>", unsafe_allow_html=True)
    if st.button("üîÑ ‡∞°‡±á‡∞ü‡∞æ ‡∞∞‡∞ø‡∞´‡±ç‡∞∞‡±Ü‡∞∑‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø", type="primary"):
        st.rerun()

# --- Main Content ---
st.markdown("---")

# Get live NAV data
with st.spinner("‡∞≤‡±à‡∞µ‡±ç NAV ‡∞≤‡±Å ‡∞™‡±ä‡∞Ç‡∞¶‡±Å‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç ‡∞≤‡±Ü‡∞ï‡±ç‡∞ï‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Ç..."):
    nav_data = {}
    portfolio_data = []
    total_value = 0
    
    for fund_name, fund_info in portfolio.items():
        # Primary scraping from Moneycontrol
        nav_mc = get_nav_from_moneycontrol(fund_info["url"], fund_name)
        
        # Fallback to Google if Moneycontrol fails
        if nav_mc is None:
            nav_google = get_nav_from_google(fund_info["google_query"])
            nav_final = nav_google if nav_google is not None else 0
        else:
            nav_final = nav_mc
        
        # Calculate portfolio value for this fund
        units = fund_info["units"]
        current_value = nav_final * units if nav_final > 0 else 0
        total_value += current_value
        
        nav_data[fund_name] = nav_final
        portfolio_data.append({
            "‡∞´‡∞Ç‡∞°‡±ç ‡∞™‡±á‡∞∞‡±Å": fund_name,
            "‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±ç‡∞≤‡±Å": f"{units:,.3f}",
            "‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV": f"‚Çπ{nav_final:.2f}" if nav_final > 0 else "‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞≤‡±á‡∞¶‡±Å",
            "‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç": format_indian_currency(current_value) if current_value > 0 else "‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞≤‡±á‡∞¶‡±Å"
        })

st.success("‚úÖ ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞°‡±á‡∞ü‡∞æ ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø!")

# --- Portfolio Summary ---
st.subheader("üí∞ ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞∏‡∞æ‡∞∞‡∞æ‡∞Ç‡∞∂‡∞Ç")

# Calculate individual fund values
elss_value = nav_data.get("SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)", 0) * portfolio["SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)"]["units"]
multi_value = nav_data.get("SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç", 0) * portfolio["SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç"]["units"]

col1, col2, col3 = st.columns(3)
with col1:
    st.metric(
        label="üìä ‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç",
        value=format_indian_currency(total_value) if total_value > 0 else "‡∞≤‡±Ü‡∞ï‡±ç‡∞ï‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Ç...",
        delta=None
    )

with col2:
    st.metric(
        label="üìà ELSS ‡∞´‡∞Ç‡∞°‡±ç ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç", 
        value=format_indian_currency(elss_value) if elss_value > 0 else "‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞≤‡±á‡∞¶‡±Å",
        delta=None
    )

with col3:
    st.metric(
        label="üìà ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞´‡∞Ç‡∞°‡±ç ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç",
        value=format_indian_currency(multi_value) if multi_value > 0 else "‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã ‡∞≤‡±á‡∞¶‡±Å",
        delta=None
    )

# --- Detailed Portfolio Table ---
st.subheader("üìã ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å")
df_portfolio = pd.DataFrame(portfolio_data)

# Style the dataframe for better readability
st.dataframe(
    df_portfolio, 
    use_container_width=True, 
    hide_index=True,
    column_config={
        "‡∞´‡∞Ç‡∞°‡±ç ‡∞™‡±á‡∞∞‡±Å": st.column_config.TextColumn("‡∞´‡∞Ç‡∞°‡±ç ‡∞™‡±á‡∞∞‡±Å", width="large"),
        "‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±ç‡∞≤‡±Å": st.column_config.TextColumn("‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±ç‡∞≤‡±Å", width="medium"),
        "‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV": st.column_config.TextColumn("‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV", width="medium"),
        "‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç": st.column_config.TextColumn("‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç", width="large")
    }
)

# --- Current NAV Information ---
st.subheader("üîπ ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å")

col1, col2 = st.columns(2)
with col1:
    elss_nav = nav_data.get("SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)", 0)
    elss_units = portfolio["SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)"]["units"]
    elss_current_value = elss_nav * elss_units
    
    st.info(f"""
    **SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)**
    - ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV: ‚Çπ{elss_nav:.2f}
    - ‡∞Æ‡±Ä ‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±ç‡∞≤‡±Å: {elss_units:,.3f}
    - ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç: {format_indian_currency(elss_current_value)}
    """)

with col2:
    multi_nav = nav_data.get("SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç", 0)
    multi_units = portfolio["SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç"]["units"]
    multi_current_value = multi_nav * multi_units
    
    st.info(f"""
    **SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç**
    - ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ NAV: ‚Çπ{multi_nav:.2f}
    - ‡∞Æ‡±Ä ‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±ç‡∞≤‡±Å: {multi_units:,.3f}
    - ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç: {format_indian_currency(multi_current_value)}
    """)

# --- Summary Table for Easy Reading ---
st.subheader("üìä ‡∞∏‡∞∞‡∞≥‡∞Æ‡±à‡∞® ‡∞∏‡∞æ‡∞∞‡∞æ‡∞Ç‡∞∂ ‡∞™‡∞ü‡±ç‡∞ü‡∞ø‡∞ï")

summary_data = [
    {
        "‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å": "‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø ‡∞µ‡∞æ‡∞≤‡±ç‡∞Ø‡±Ç",
        "‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç": format_indian_currency(total_value),
        "‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø": "‚úÖ ‡∞ö‡±Å‡∞∞‡±Å‡∞ï‡±Å‡∞ó‡∞æ ‡∞â‡∞Ç‡∞¶‡∞ø" if total_value > 0 else "‚ö†Ô∏è ‡∞°‡±á‡∞ü‡∞æ ‡∞≤‡±ã‡∞°‡±ç ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞®‡±ç‡∞®‡∞¶‡∞ø"
    },
    {
        "‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å": "ELSS ‡∞´‡∞Ç‡∞°‡±ç (‡∞™‡∞®‡±ç‡∞®‡±Å ‡∞Ü‡∞¶‡∞æ)",
        "‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç": format_indian_currency(elss_current_value),
        "‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø": f"NAV: ‚Çπ{elss_nav:.2f}" if elss_nav > 0 else "‡∞≤‡±ã‡∞°‡±ç ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞®‡±ç‡∞®‡∞¶‡∞ø"
    },
    {
        "‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å": "‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞´‡∞Ç‡∞°‡±ç",
        "‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç": format_indian_currency(multi_current_value),
        "‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø": f"NAV: ‚Çπ{multi_nav:.2f}" if multi_nav > 0 else "‡∞≤‡±ã‡∞°‡±ç ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞®‡±ç‡∞®‡∞¶‡∞ø"
    }
]

df_summary = pd.DataFrame(summary_data)
st.dataframe(
    df_summary, 
    use_container_width=True, 
    hide_index=True,
    column_config={
        "‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å": st.column_config.TextColumn("‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å", width="large"),
        "‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç": st.column_config.TextColumn("‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç", width="large"),
        "‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø": st.column_config.TextColumn("‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø", width="medium")
    }
)

# --- Important Information ---
st.subheader("üìù ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç")

col1, col2 = st.columns(2)
with col1:
    st.success("""
    **‡∞Æ‡±Ä ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø:**
    - ‡∞∞‡±Ü‡∞Ç‡∞°‡±Å SBI ‡∞Æ‡±ç‡∞Ø‡±Ç‡∞ö‡±Å‡∞µ‡∞≤‡±ç ‡∞´‡∞Ç‡∞°‡±ç‡∞≤‡∞≤‡±ã ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø
    - ELSS ‡∞´‡∞Ç‡∞°‡±ç - ‡∞™‡∞®‡±ç‡∞®‡±Å ‡∞Ü‡∞¶‡∞æ ‡∞ï‡±ã‡∞∏‡∞Ç
    - ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞´‡∞Ç‡∞°‡±ç - ‡∞µ‡±à‡∞µ‡∞ø‡∞ß‡±ç‡∞Ø‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç
    - ‡∞∞‡±ã‡∞ú‡±Å‡∞µ‡∞æ‡∞∞‡±Ä NAV ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç‡∞≤‡±Å
    """)

with col2:
    st.warning("""
    **‡∞ó‡∞Æ‡∞®‡∞ø‡∞Ç‡∞ö‡∞µ‡∞≤‡∞∏‡∞ø‡∞®‡∞µ‡∞ø:**
    - NAV ‡∞∞‡±ã‡∞ú‡±Å‡∞µ‡∞æ‡∞∞‡±Ä ‡∞Æ‡∞æ‡∞∞‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø
    - ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç ‡∞ó‡∞Ç‡∞ü‡∞≤‡∞≤‡±ã ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø
    - ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡∞ø‡∞ï NAV ‡∞ï‡±ã‡∞∏‡∞Ç AMC ‡∞µ‡±Ü‡∞¨‡±ç‚Äå‡∞∏‡±à‡∞ü‡±ç ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø
    - ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±Å‡∞¨‡∞°‡∞ø‡∞ï‡∞ø ‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å ‡∞∏‡∞≤‡∞π‡∞æ ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø
    """)

# --- Embedded Fund Pages ---
st.subheader("üåê ‡∞´‡∞Ç‡∞°‡±ç ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤ ‡∞™‡±á‡∞ú‡±Ä‡∞≤‡±Å")
st.markdown("‡∞Æ‡∞®‡±Ä‡∞ï‡∞Ç‡∞ü‡±ç‡∞∞‡±ã‡∞≤‡±ç ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞µ‡∞ø‡∞µ‡∞∞‡∞Æ‡±à‡∞® ‡∞´‡∞Ç‡∞°‡±ç ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç:")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç")
    st.markdown(f"[‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞ü‡±ç‡∞Ø‡∞æ‡∞¨‡±ç‚Äå‡∞≤‡±ã ‡∞§‡±Ü‡∞∞‡∞µ‡∞Ç‡∞°‡∞ø]({portfolio['SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)']['url']})")
    
    st.components.v1.iframe(
        portfolio["SBI ‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç ‡∞ü‡∞∞‡±ç‡∞Æ‡±ç ‡∞à‡∞ï‡±ç‡∞µ‡∞ø‡∞ü‡±Ä ‡∞´‡∞Ç‡∞°‡±ç (ELSS)"]["url"],
        height=400,
        scrolling=True
    )

with col2:
    st.markdown("### SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç")
    st.markdown(f"[‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞ü‡±ç‡∞Ø‡∞æ‡∞¨‡±ç‚Äå‡∞≤‡±ã ‡∞§‡±Ü‡∞∞‡∞µ‡∞Ç‡∞°‡∞ø]({portfolio['SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç']['url']})")
    
    st.components.v1.iframe(
        portfolio["SBI ‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä ‡∞Ö‡∞∏‡±Ü‡∞ü‡±ç ‡∞Ö‡∞≤‡±ä‡∞ï‡±á‡∞∑‡∞®‡±ç ‡∞´‡∞Ç‡∞°‡±ç"]["url"],
        height=400,
        scrolling=True
    )

# --- Footer ---
st.markdown("---")
col1, col2 = st.columns([3, 1])
with col1:
    st.caption("**‡∞°‡±á‡∞ü‡∞æ ‡∞Æ‡±Ç‡∞≤‡∞æ‡∞≤‡±Å:** ‡∞™‡±ç‡∞∞‡∞ß‡∞æ‡∞®‡∞Ç - Moneycontrol.com | ‡∞™‡±ç‡∞∞‡∞§‡±ç‡∞Ø‡∞æ‡∞Æ‡∞®‡∞Ø‡∞Ç - Google ‡∞∂‡±ã‡∞ß‡∞®")
    st.caption("‚ö†Ô∏è **‡∞®‡∞ø‡∞∞‡∞æ‡∞ï‡∞∞‡∞£:** NAV ‡∞µ‡∞ø‡∞≤‡±Å‡∞µ‡∞≤‡±Å ‡∞™‡∞¨‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞Æ‡±Ç‡∞≤‡∞æ‡∞≤ ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞Ø‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∞‡∞ø‡∞Ø‡∞≤‡±ç-‡∞ü‡±à‡∞Æ‡±ç ‡∞ï‡∞æ‡∞ï‡∞™‡±ã‡∞µ‡∞ö‡±ç‡∞ö‡±Å. ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡∞ø‡∞ï ‡∞µ‡∞ø‡∞≤‡±Å‡∞µ‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç, ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø AMFI ‡∞≤‡±á‡∞¶‡∞æ ‡∞´‡∞Ç‡∞°‡±ç ‡∞π‡±å‡∞∏‡±ç ‡∞µ‡±Ü‡∞¨‡±ç‚Äå‡∞∏‡±à‡∞ü‡±ç‡∞≤‡∞®‡±Å ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø.")

with col2:
    st.caption(f"**‡∞ö‡∞ø‡∞µ‡∞∞‡∞ø‡∞∏‡∞æ‡∞∞‡∞ø ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")